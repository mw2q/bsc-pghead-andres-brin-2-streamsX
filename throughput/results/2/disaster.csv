Q21,720672.0,->  Nested Loop Semi Join  (cost=2406.31..2850475.74 rows=1 width=34) (actual time=32.668..37317.619 rows=720672 loops=1)
Q3,315628.9,->  Sort  (cost=2533781.88..2541672.60 rows=3156289 width=20) (actual time=37141.195..37141.195 rows=10 loops=1)
Q18,300828.3,->  GroupAggregate  (cost=10171256.47..10998534.43 rows=30082835 width=39) (actual time=69275.623..69275.959 rows=100 loops=1)
Q18,67770.0,->  Hash Join  (cost=2180878.81..2794829.40 rows=7522476 width=39) (actual time=43081.324..49509.870 rows=111 loops=1)
Q18,67770.0,->  Hash Join  (cost=2111850.81..2612964.26 rows=7522476 width=20) (actual time=42301.628..48729.821 rows=111 loops=1)
Q18,67770.0,->  Hash  (cost=2794829.40..2794829.40 rows=7522476 width=39) (actual time=49510.149..49510.149 rows=111 loops=1)
Q18,42914.1,->  Sort  (cost=10171256.47..10246463.56 rows=30082835 width=39) (actual time=69275.610..69275.643 rows=701 loops=1)
Q21,40444.0,->  Nested Loop Anti Join  (cost=2406.88..2850477.52 rows=1 width=26) (actual time=33.201..40181.658 rows=40444 loops=1)
Q18,38716.6,->  Hash Join  (cost=2888860.35..5612021.28 rows=30082835 width=39) (actual time=49538.864..69274.386 rows=777 loops=1)
Q18,36231.8,->  Hash  (cost=2061579.11..2061579.11 rows=4021736 width=4) (actual time=42159.594..42159.594 rows=111 loops=1)
Q18,36231.8,->  HashAggregate  (cost=1971090.05..2021361.75 rows=4021736 width=8) (actual time=37553.499..42159.229 rows=111 loops=1)
Q10,28024.2,->  Sort  (cost=2277118.96..2278520.17 rows=560484 width=175) (actual time=33160.987..33160.988 rows=20 loops=1)
Q9,24028.3,->  Sort  (cost=1199599.11..1199599.45 rows=136 width=46) (actual time=85083.727..85530.284 rows=3267853 loops=1)
Q9,24028.3,->  Nested Loop  (cost=66924.65..1199590.18 rows=136 width=24) (actual time=806.663..76715.559 rows=3267853 loops=1)
Q9,24028.3,->  Nested Loop  (cost=66924.22..1199524.27 rows=136 width=24) (actual time=806.602..49287.257 rows=3267853 loops=1)
Q9,24028.3,->  Nested Loop  (cost=66923.93..1199480.39 rows=136 width=28) (actual time=806.591..39026.379 rows=3267853 loops=1)
Q9,24028.3,->  Hash Join  (cost=66926.22..1199594.29 rows=136 width=46) (actual time=806.731..79815.200 rows=3267853 loops=1)
Q2,4750.0,->  Merge Join  (cost=465687.75..890240.54 rows=1 width=190) (actual time=6275.926..8278.332 rows=4750 loops=1)
Q21,4079.0,->  HashAggregate  (cost=2850477.53..2850477.54 rows=1 width=26) (actual time=40233.484..40234.568 rows=4079 loops=1)
Q15,3693.0,->  Subquery Scan on revenue2  (cost=1654699.00..1654782.09 rows=3693 width=12) (actual time=49839.329..49850.093 rows=1 loops=1)
Q15,3693.0,->  Sort  (cost=1655000.91..1655010.14 rows=3693 width=12) (actual time=49850.114..49850.114 rows=1 loops=1)
Q15,3693.0,Merge Join  (cost=3293113.70..3298210.30 rows=3693 width=79) (actual time=49880.276..49880.279 rows=1 loops=1)
Q15,3693.0,->  HashAggregate  (cost=1654699.00..1654745.16 rows=3693 width=12) (actual time=49839.328..49850.092 rows=1 loops=1)
Q7,762.7,Sort  (cost=2130916.83..2130924.45 rows=3051 width=64) (actual time=22785.004..22785.005 rows=4 loops=1)
Q7,762.7,->  HashAggregate  (cost=2130694.48..2130740.25 rows=3051 width=64) (actual time=22784.933..22784.943 rows=4 loops=1)
Q8,364.0,Sort  (cost=1734428.75..1734430.57 rows=728 width=38) (actual time=13221.578..13221.579 rows=2 loops=1)
Q8,364.0,->  HashAggregate  (cost=1734381.40..1734394.14 rows=728 width=38) (actual time=13221.539..13221.539 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2850477.55..2850477.55 rows=1 width=26) (actual time=40235.751..40235.758 rows=100 loops=1)
Q21,100.0,Limit  (cost=2850477.55..2850477.55 rows=1 width=26) (actual time=40235.753..40235.771 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=890240.55..890240.56 rows=1 width=190) (actual time=8282.989..8283.002 rows=100 loops=1)
Q2,100.0,Limit  (cost=890240.55..890240.56 rows=1 width=190) (actual time=8282.991..8283.012 rows=100 loops=1)
Q11,35.3,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6821.507..6822.515 rows=9062 loops=1)
Q11,35.3,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6747.486..6816.508 rows=9062 loops=1)
Q3,27.9,->  HashAggregate  (cost=2434012.72..2465575.61 rows=3156289 width=20) (actual time=37083.460..37119.807 rows=113066 loops=1)
Q15,27.0,->  HashAggregate  (cost=1638029.39..1638066.32 rows=3693 width=12) (actual time=23050.686..23075.373 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=748141)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7823.14 rows=767514 width=0) (actual time=118.746..118.746 rows=10676480 loops=1)
Q3,10.5,->  Hash Join  (cost=763095.39..2386668.38 rows=3156289 width=20) (actual time=10312.874..36805.747 rows=298451 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2415.61 rows=320480 width=0) (actual time=34.637..34.637 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.076 rows=8 loops=435644)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.609..3.609 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.600..3.600 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1203921)
Q5,5.0,Sort  (cost=2002231.12..2002231.18 rows=25 width=34) (actual time=17095.944..17095.944 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2002230.28..2002230.53 rows=25 width=34) (actual time=17095.902..17095.903 rows=5 loops=1)
Q4,5.0,Sort  (cost=1463634.12..1463634.12 rows=1 width=16) (actual time=12320.764..12320.764 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.22 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=561129)
Q4,5.0,->  HashAggregate  (cost=1463634.10..1463634.11 rows=1 width=16) (actual time=12320.710..12320.711 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=720672)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5627.06 rows=558706 width=0) (actual time=27.319..27.319 rows=2540800 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5723.07 rows=568307 width=0) (actual time=27.252..27.252 rows=2540800 loops=1)
Q13,4.3,Sort  (cost=847428.16..847428.66 rows=200 width=8) (actual time=24770.560..24770.562 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=847418.52..847420.52 rows=200 width=8) (actual time=24770.479..24770.489 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.014..0.016 rows=4 loops=457006)
Q17,3.7,->  Nested Loop  (cost=78.29..111823.48 rows=19645 width=4) (actual time=1.574..173.698 rows=5251 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5767.30..1462887.35 rows=149350 width=16) (actual time=27.498..12026.026 rows=514595 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.032 rows=3 loops=1966)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241719.59 rows=32209545 width=0) (actual time=118.612..118.612 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.10 rows=1 width=8) (actual time=0.300..0.371 rows=3 loops=21540)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..55135.80 rows=7346107 width=0) (actual time=27.213..27.213 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=692323.23..692323.24 rows=3 width=20) (actual time=8334.308..8334.309 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=639426.08..639426.12 rows=3 width=20) (actual time=8334.249..8334.250 rows=7 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..182312.87 rows=24288649 width=0) (actual time=118.259..118.259 rows=10686720 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..182312.87 rows=24288649 width=0) (actual time=117.843..117.843 rows=10686720 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.034..0.051 rows=2 loops=6437)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1993.47 rows=198147 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3028955.74..3028955.75 rows=1 width=27) (actual time=32333.760..32333.761 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3028955.72..3028955.73 rows=1 width=27) (actual time=32333.706..32333.706 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344551.15..2242587.75 rows=560484 width=175) (actual time=9340.108..30993.070 rows=1147416 loops=1)
Q10,2.0,->  Hash Join  (cost=344549.59..2234879.53 rows=560484 width=153) (actual time=9340.079..30588.096 rows=1147416 loops=1)
Q10,2.0,->  Hash Join  (cost=275521.59..2157444.27 rows=560484 width=12) (actual time=7767.599..28311.449 rows=1147416 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2328608.04 rows=390585 width=38) (actual time=32.572..33267.542 rows=748141 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1906310.37 rows=802209 width=34) (actual time=32.430..25538.159 rows=1549072 loops=1)
Q16,1.9,->  Sort  (cost=403757.93..405245.91 rows=595192 width=40) (actual time=11440.910..11583.966 rows=1187893 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=1.144..5267.235 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54760.18..346670.10 rows=595192 width=40) (actual time=1358.327..8183.583 rows=1187893 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820675.88 rows=20055223 width=8) (actual time=0.017..19576.322 rows=37928885 loops=1)
Q20,1.8,->  Nested Loop  (cost=826.98..12723267.41 rows=32231 width=4) (actual time=12.633..8327.822 rows=58346 loops=1)
Q20,1.8,->  Hash  (cost=12723267.41..12723267.41 rows=32231 width=4) (actual time=8363.009..8363.009 rows=58346 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.058..1.087 rows=56 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.030..23.651 rows=61971 loops=1)
Q1,1.5,Sort  (cost=4196652.34..4196652.35 rows=6 width=20) (actual time=92036.282..92036.282 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4196652.16..4196652.26 rows=6 width=20) (actual time=92036.234..92036.237 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5971.33 rows=595933 width=0) (actual time=4.231..4.231 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2256599.85..2262204.69 rows=560484 width=175) (actual time=32834.541..33022.172 rows=381871 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.65 rows=139965 width=0) (actual time=443.016..443.016 rows=191057 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.64..41861.73 rows=139965 width=24) (actual time=451.031..557.356 rows=191057 loops=1)
Q20,1.3,Sort  (cost=12726121.88..12726125.10 rows=1289 width=51) (actual time=8394.385..8394.486 rows=1796 loops=1)
Q20,1.3,->  Hash Semi Join  (cost=12723713.30..12726055.29 rows=1289 width=51) (actual time=8363.473..8393.039 rows=1796 loops=1)
Q9,1.2,GroupAggregate  (cost=1199599.11..1199603.87 rows=136 width=46) (actual time=85093.170..87645.370 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91698.69 rows=9155069 width=0) (actual time=118.702..118.702 rows=10664960 loops=1)
Q20,1.1,->  Bitmap Heap Scan on part  (cost=826.55..36393.37 rows=24023 width=4) (actual time=12.074..302.386 rows=21540 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112109 width=4) (actual time=0.017..769.316 rows=108911 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.36..352365.72 rows=448436 width=16) (actual time=806.484..5025.214 rows=435644 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112109 width=4) (actual time=805.912..805.912 rows=108911 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.693..1939.594 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.42..1686538.29 rows=121891 width=20) (actual time=7.528..10867.031 rows=124672 loops=1)
Q8,1.0,->  Nested Loop  (cost=420.98..1489056.40 rows=403321 width=16) (actual time=6.901..4495.234 rows=410855 loops=1)
Q8,1.0,->  Nested Loop  (cost=38751.86..1733435.19 rows=24378 width=16) (actual time=2043.197..13136.557 rows=24984 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.42..1733893.84 rows=24378 width=38) (actual time=2043.251..13176.538 rows=24984 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.56..1725569.31 rows=24378 width=16) (actual time=2043.181..12979.787 rows=24984 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2033.262..2033.262 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.98 rows=13407 width=0) (actual time=4.533..4.533 rows=13678 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13678)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.33..28211.30 rows=13407 width=4) (actual time=6.814..46.173 rows=13678 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.040..0.310 rows=30 loops=13678)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.642..377.705 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..2560.955 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2117970.36 rows=1453943 width=42) (actual time=608.154..22027.665 rows=1461295 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2129786.88 rows=60507 width=64) (actual time=653.601..22693.365 rows=58520 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=607.881..8364.305 rows=1203921 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..567.814 rows=120130 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..43.073 rows=8009 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=607.348..607.348 rows=120130 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=45.204..45.204 rows=8009 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91897.91..1364359.97 rows=796877 width=8) (actual time=119.591..29834.430 rows=796379 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..479702.28 rows=2285746 width=8) (actual time=0.013..5003.669 rows=2276798 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.702..2117.960 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1982377.55 rows=1828167 width=46) (actual time=2229.939..16247.095 rows=1827542 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2001499.04 rows=73124 width=34) (actual time=2287.284..17008.777 rows=72750 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..531186.95 rows=457149 width=38) (actual time=2229.870..8173.790 rows=457006 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2227.873..2227.873 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.633..413.837 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5766.73..268175.32 rows=558706 width=20) (actual time=27.480..4773.176 rows=561129 loops=1)
Q3,1.0,->  Hash Join  (cost=106749.65..494894.79 rows=1474290 width=12) (actual time=666.965..9661.334 rows=1461626 loops=1)
Q3,1.0,->  Hash  (cost=494894.79..494894.79 rows=1474290 width=12) (actual time=10186.670..10186.670 rows=1461626 loops=1)
Q3,1.0,->  Hash  (cost=46014.39..46014.39 rows=301035 width=4) (actual time=637.552..637.552 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6898.19 rows=301035 width=0) (actual time=62.962..62.962 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56972.33..402826.66 rows=7346107 width=16) (actual time=27.378..6590.730 rows=7327236 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249771.97..1720996.29 rows=32209545 width=12) (actual time=119.343..21170.632 rows=32183224 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.45..46014.39 rows=301035 width=4) (actual time=70.901..544.765 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=4) (actual time=0.012..3716.499 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=404477.52..404477.52 rows=15044952 width=4) (actual time=7611.316..7611.316 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=595449.07..638983.71 rows=58982 width=20) (actual time=8106.950..8313.435 rows=63581 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6549.78 rows=381700 width=0) (actual time=75.267..75.267 rows=382464 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6645.20..51942.83 rows=381700 width=4) (actual time=83.088..320.653 rows=382464 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.267..31.212 rows=4079 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.290..32.290 rows=4079 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.254..30.477 rows=4079 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6275.697..6396.165 rows=1602272 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.328..147.078 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8036 width=30) (actual time=0.058..1232.260 rows=8127 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=158.196..5250.141 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=158.055..158.055 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.256..28.532 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.314..28.633 rows=3961 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..820.54 rows=21999 width=0) (actual time=8.527..8.527 rows=21540 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.297..28.054 rows=3961 loops=1)
Q19,1.0,->  Nested Loop  (cost=12827.31..614950.60 rows=1124 width=8) (actual time=34.062..2138.066 rows=1125 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.67 rows=396767 width=0) (actual time=4.157..4.157 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.63 rows=8193 width=0) (actual time=3.267..3.267 rows=8051 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.23 rows=7951 width=0) (actual time=3.519..3.519 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.79 rows=7909 width=0) (actual time=3.472..3.472 rows=8054 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.039..0.039 rows=30 loops=4761)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12822.57..26602.64 rows=4795 width=30) (actual time=31.254..117.398 rows=4761 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.005..3065.504 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.70 rows=60165670 width=8) (actual time=0.003..10393.003 rows=59985653 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.70 rows=60165670 width=8) (actual time=0.069..8615.519 rows=59985653 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.020..0.033 rows=30 loops=1966)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.020..0.033 rows=30 loops=1966)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.04 rows=1961 width=0) (actual time=0.911..0.911 rows=1966 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.53..6509.04 rows=1961 width=4) (actual time=1.239..30.536 rows=1966 loops=1)
Q16,1.0,Sort  (cost=413536.96..413606.71 rows=27900 width=40) (actual time=12237.934..12239.775 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51024.01..51024.01 rows=297596 width=40) (actual time=1355.178..1355.178 rows=297145 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403757.93..411476.83 rows=27900 width=40) (actual time=11440.972..12179.224 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2490.01..51024.01 rows=297596 width=40) (actual time=34.714..1229.124 rows=297145 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=182868.52..1615803.25 rows=2222614 width=12) (actual time=118.560..20950.631 rows=2241368 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=182868.52..1615803.25 rows=2222614 width=12) (actual time=119.015..24591.506 rows=2241368 loops=1)
Q14,1.0,->  Hash Join  (cost=93537.02..1143138.63 rows=767514 width=29) (actual time=1555.652..27071.583 rows=749781 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8015.02..1046103.92 rows=767514 width=12) (actual time=119.596..24817.689 rows=749781 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442089.90 rows=14940031 width=8) (actual time=0.019..6634.882 rows=14838784 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..735218.36 rows=14940031 width=8) (actual time=729.701..15926.655 rows=15338802 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=20) (actual time=0.019..3900.864 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2422332.58 rows=288897 width=15) (actual time=0.018..23365.306 rows=313438 loops=1)
Q12,1.0,->  Hash Join  (cost=592539.42..3023900.03 rows=288897 width=27) (actual time=8309.565..32014.398 rows=313438 loops=1)
Q12,1.0,->  Hash  (cost=404477.52..404477.52 rows=15044952 width=20) (actual time=8264.719..8264.719 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.311..47.167 rows=4021 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.293..23.330 rows=4021 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.222..2324.401 rows=321680 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=48.449..4109.559 rows=321680 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=48.387..48.387 rows=4021 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.157..24.157 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.260..22.678 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.292..46.248 rows=4021 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1820675.88 rows=59399407 width=20) (actual time=0.015..20906.338 rows=59249452 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820675.88 rows=14837857 width=12) (actual time=0.018..17492.313 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268417.75..268417.75 rows=568307 width=8) (actual time=7764.235..7764.235 rows=574317 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5865.15..268417.75 rows=568307 width=8) (actual time=27.425..7521.450 rows=574317 loops=1)
