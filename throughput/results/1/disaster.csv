Q21,692770.0,->  Nested Loop Semi Join  (cost=2406.31..2844759.71 rows=1 width=34) (actual time=46.576..36790.438 rows=692770 loops=1)
Q18,401104.4,->  GroupAggregate  (cost=10171256.47..10998534.43 rows=30082835 width=39) (actual time=67102.217..67102.459 rows=75 loops=1)
Q3,313968.5,->  Sort  (cost=2537770.76..2545619.98 rows=3139685 width=20) (actual time=37384.122..37384.123 rows=10 loops=1)
Q18,100299.6,->  Hash Join  (cost=2180878.81..2794829.40 rows=7522476 width=39) (actual time=43094.399..48685.059 rows=75 loops=1)
Q18,100299.6,->  Hash Join  (cost=2111850.81..2612964.26 rows=7522476 width=20) (actual time=42235.802..47826.223 rows=75 loops=1)
Q18,100299.6,->  Hash  (cost=2794829.40..2794829.40 rows=7522476 width=39) (actual time=48685.302..48685.302 rows=75 loops=1)
Q18,57300.6,->  Sort  (cost=10171256.47..10246463.56 rows=30082835 width=39) (actual time=67102.202..67102.235 rows=525 loops=1)
Q18,57300.6,->  Hash Join  (cost=2888860.35..5612021.28 rows=30082835 width=39) (actual time=49072.504..67101.246 rows=525 loops=1)
Q18,53623.1,->  Hash  (cost=2061579.11..2061579.11 rows=4021736 width=4) (actual time=42109.854..42109.854 rows=75 loops=1)
Q18,53623.1,->  HashAggregate  (cost=1971090.05..2021361.75 rows=4021736 width=8) (actual time=36878.043..42109.473 rows=75 loops=1)
Q21,38537.0,->  Nested Loop Anti Join  (cost=2406.88..2844761.49 rows=1 width=26) (actual time=46.609..39616.165 rows=38537 loops=1)
Q10,28764.9,->  Sort  (cost=2279172.74..2280610.98 rows=575298 width=175) (actual time=30229.205..30229.209 rows=20 loops=1)
Q9,22882.0,->  Sort  (cost=1245302.86..1245303.22 rows=143 width=46) (actual time=77577.979..78086.928 rows=3272127 loops=1)
Q9,22882.0,->  Nested Loop  (cost=66999.73..1245293.50 rows=143 width=24) (actual time=791.070..68983.976 rows=3272127 loops=1)
Q9,22882.0,->  Nested Loop  (cost=66999.29..1245224.20 rows=143 width=24) (actual time=791.027..45059.807 rows=3272127 loops=1)
Q9,22882.0,->  Nested Loop  (cost=66999.00..1245178.06 rows=143 width=28) (actual time=791.013..34984.719 rows=3272127 loops=1)
Q9,22882.0,->  Hash Join  (cost=67001.29..1245297.75 rows=143 width=46) (actual time=791.136..72123.296 rows=3272127 loops=1)
Q2,4644.0,->  Merge Join  (cost=465687.75..883059.06 rows=1 width=190) (actual time=6154.381..8031.308 rows=4644 loops=1)
Q21,3924.0,->  HashAggregate  (cost=2844761.49..2844761.50 rows=1 width=26) (actual time=39670.685..39671.826 rows=3924 loops=1)
Q15,3774.0,->  Subquery Scan on revenue1  (cost=2010841.88..2010926.79 rows=3774 width=12) (actual time=40187.278..40207.245 rows=1 loops=1)
Q15,3774.0,->  Sort  (cost=2011151.00..2011160.44 rows=3774 width=12) (actual time=40207.268..40207.269 rows=1 loops=1)
Q15,3774.0,Merge Join  (cost=4005041.60..4010139.41 rows=3774 width=79) (actual time=40230.717..40230.719 rows=1 loops=1)
Q15,3774.0,->  HashAggregate  (cost=2010841.88..2010889.05 rows=3774 width=12) (actual time=40187.277..40207.243 rows=1 loops=1)
Q7,762.7,Sort  (cost=2130916.83..2130924.45 rows=3051 width=64) (actual time=22472.637..22472.637 rows=4 loops=1)
Q7,762.7,->  HashAggregate  (cost=2130694.48..2130740.25 rows=3051 width=64) (actual time=22472.571..22472.579 rows=4 loops=1)
Q8,364.0,Sort  (cost=1715822.31..1715824.13 rows=728 width=38) (actual time=11892.049..11892.050 rows=2 loops=1)
Q8,364.0,->  HashAggregate  (cost=1715774.96..1715787.70 rows=728 width=38) (actual time=11892.012..11892.014 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2844761.51..2844761.52 rows=1 width=26) (actual time=39672.951..39672.958 rows=100 loops=1)
Q21,100.0,Limit  (cost=2844761.51..2844761.52 rows=1 width=26) (actual time=39672.953..39672.969 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=883059.07..883059.08 rows=1 width=190) (actual time=8035.871..8035.890 rows=100 loops=1)
Q2,100.0,Limit  (cost=883059.07..883059.08 rows=1 width=190) (actual time=8035.873..8035.901 rows=100 loops=1)
Q11,32.6,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6843.093..6844.064 rows=9789 loops=1)
Q11,32.6,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6747.277..6837.675 rows=9789 loops=1)
Q3,27.5,->  HashAggregate  (cost=2438526.45..2469923.30 rows=3139685 width=20) (actual time=37323.988..37362.348 rows=113905 loops=1)
Q15,26.4,->  HashAggregate  (cost=1993805.38..1993843.12 rows=3774 width=12) (actual time=19823.325..19852.526 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=718906)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7820.75 rows=767275 width=0) (actual time=118.783..118.783 rows=10686720 loops=1)
Q3,10.4,->  Hash Join  (cost=762589.29..2391431.18 rows=3139685 width=20) (actual time=7804.186..37039.688 rows=300618 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2420.01 rows=321067 width=0) (actual time=34.633..34.633 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.013..0.066 rows=7 loops=436376)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.619..3.619 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.610..3.610 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.010 rows=1 loops=1204729)
Q5,5.0,Sort  (cost=2002231.12..2002231.18 rows=25 width=34) (actual time=15017.355..15017.355 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2002230.28..2002230.53 rows=25 width=34) (actual time=15017.308..15017.310 rows=5 loops=1)
Q4,5.0,Sort  (cost=1473312.16..1473312.16 rows=1 width=16) (actual time=16017.036..16017.036 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.13 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=573764)
Q4,5.0,->  HashAggregate  (cost=1473312.14..1473312.15 rows=1 width=16) (actual time=16016.986..16016.986 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=692770)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5723.07 rows=568307 width=0) (actual time=27.882..27.882 rows=2540800 loops=1)
Q13,4.3,Sort  (cost=847428.16..847428.66 rows=200 width=8) (actual time=25330.775..25330.778 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=847418.52..847420.52 rows=200 width=8) (actual time=25330.697..25330.704 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5873.28 rows=583328 width=0) (actual time=27.281..27.281 rows=2540800 loops=1)
Q17,3.8,->  Nested Loop  (cost=82.46..112726.62 rows=19825 width=4) (actual time=1.565..161.554 rows=5163 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.012..0.013 rows=4 loops=455701)
Q4,3.4,->  Nested Loop Semi Join  (cost=5865.71..1472552.55 rows=151917 width=16) (actual time=28.083..15690.059 rows=525827 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.011..0.025 rows=3 loops=1953)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244718.17 rows=32609356 width=0) (actual time=117.558..117.558 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.181..0.250 rows=3 loops=21730)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54293.09 rows=7233746 width=0) (actual time=27.190..27.190 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=692302.04..692302.04 rows=3 width=20) (actual time=8505.364..8505.365 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=639417.14..639417.19 rows=3 width=20) (actual time=8505.305..8505.306 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.032..0.049 rows=2 loops=6322)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1993.47 rows=198147 width=0) (actual time=4.188..4.188 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3029156.50..3029156.50 rows=1 width=27) (actual time=32150.251..32150.252 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3029156.48..3029156.49 rows=1 width=27) (actual time=32150.168..32150.169 rows=2 loops=1)
Q20,1.9,->  Nested Loop  (cost=754.48..11668705.35 rows=29545 width=4) (actual time=12.947..5755.549 rows=58891 loops=1)
Q20,1.9,->  Hash  (cost=11668705.35..11668705.35 rows=29545 width=4) (actual time=5789.217..5789.217 rows=58891 loops=1)
Q16,1.9,->  Sort  (cost=403881.46..405371.62 rows=596066 width=40) (actual time=10091.707..10233.453 rows=1187568 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.731..4014.049 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54784.83..346703.49 rows=596066 width=40) (actual time=1274.934..6832.103 rows=1187568 loops=1)
Q10,1.9,->  Hash Join  (cost=345118.20..2243728.83 rows=575298 width=175) (actual time=6201.442..28023.498 rows=1149256 loops=1)
Q10,1.9,->  Hash Join  (cost=345116.64..2235816.92 rows=575298 width=153) (actual time=6201.412..27616.854 rows=1149256 loops=1)
Q10,1.9,->  Hash Join  (cost=276088.64..2158159.45 rows=575298 width=12) (actual time=4894.808..25546.963 rows=1149256 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.40 rows=20015211 width=8) (actual time=0.005..16064.450 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323953.65 rows=389806 width=38) (actual time=46.560..31622.327 rows=718906 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902511.84 rows=800608 width=34) (actual time=46.539..21998.768 rows=1489515 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.033..0.679 rows=56 loops=1)
Q15,1.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..17.651 rows=55988 loops=1)
Q20,1.5,Sort  (cost=11671518.38..11671521.34 rows=1182 width=51) (actual time=5821.143..5821.247 rows=1849 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669117.66..11671458.06 rows=1182 width=51) (actual time=5789.653..5818.365 rows=1849 loops=1)
Q1,1.5,Sort  (cost=4201957.22..4201957.23 rows=6 width=20) (actual time=91601.265..91601.266 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4201957.04..4201957.14 rows=6 width=20) (actual time=91601.211..91601.213 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2258111.28..2263864.26 rows=575298 width=175) (actual time=29899.567..30090.197 rows=382144 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5971.33 rows=595933 width=0) (actual time=4.233..4.233 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.39 rows=139842 width=0) (actual time=673.908..673.908 rows=190548 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.35..41857.21 rows=139842 width=24) (actual time=681.895..771.589 rows=190548 loops=1)
Q18,1.3,Limit  (cost=10171256.47..10171259.22 rows=100 width=39) (actual time=67102.220..67102.466 rows=75 loops=1)
Q9,1.2,GroupAggregate  (cost=1245302.86..1245307.87 rows=143 width=46) (actual time=77587.845..80242.788 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91881.71 rows=9173371 width=0) (actual time=118.939..118.939 rows=10686720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118115 width=4) (actual time=0.017..753.960 rows=109094 loops=1)
Q9,1.0,->  Hash Join  (cost=66998.44..352681.04 rows=472460 width=16) (actual time=790.954..5004.039 rows=436376 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118115 width=4) (actual time=790.433..790.433 rows=109094 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.699..1947.243 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.83..1668069.57 rows=120127 width=20) (actual time=6.975..9552.566 rows=121178 loops=1)
Q8,1.0,->  Nested Loop  (cost=411.39..1473445.70 rows=397484 width=16) (actual time=6.827..5520.933 rows=397392 loops=1)
Q8,1.0,->  Nested Loop  (cost=38742.27..1714842.43 rows=24025 width=16) (actual time=2047.418..11816.035 rows=24243 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.09 rows=31 width=20) (actual time=0.030..0.402 rows=30 loops=13246)
Q8,1.0,->  Hash Join  (cost=38743.83..1715294.46 rows=24025 width=38) (actual time=2047.468..11851.686 rows=24243 loops=1)
Q8,1.0,->  Hash Join  (cost=38741.98..1707090.45 rows=24025 width=16) (actual time=2047.380..11665.811 rows=24243 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2038.455..2038.455 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.52 rows=13213 width=0) (actual time=4.541..4.541 rows=13246 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=410.83..27973.17 rows=13213 width=4) (actual time=6.781..54.554 rows=13246 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.654..380.357 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.004..3100.710 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2117970.36 rows=1453943 width=42) (actual time=827.666..21798.340 rows=1465515 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2129786.88 rows=60507 width=64) (actual time=872.237..22379.019 rows=58488 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=827.602..8493.390 rows=1204729 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..782.698 rows=120312 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..42.087 rows=7952 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=827.082..827.082 rows=120312 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=44.065..44.065 rows=7952 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92072.37..1367078.21 rows=762608 width=8) (actual time=119.812..25831.314 rows=763038 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..479702.28 rows=2285746 width=8) (actual time=0.015..4359.841 rows=2276798 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.785..2112.887 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1982377.55 rows=1828167 width=46) (actual time=2225.873..14218.596 rows=1821793 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2001499.04 rows=73124 width=34) (actual time=2284.142..14929.768 rows=73098 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..531186.95 rows=457149 width=38) (actual time=2225.847..7453.732 rows=455701 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2223.868..2223.868 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.643..411.961 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5865.15..268417.75 rows=568307 width=20) (actual time=28.057..7030.368 rows=573764 loops=1)
Q3,1.0,->  Hash Join  (cost=105835.41..491629.90 rows=1447111 width=12) (actual time=992.768..7221.476 rows=1445419 loops=1)
Q3,1.0,->  Hash  (cost=491629.90..491629.90 rows=1447111 width=12) (actual time=7679.323..7679.323 rows=1445419 loops=1)
Q3,1.0,->  Hash  (cost=45982.95..45982.95 rows=300075 width=4) (actual time=963.511..963.511 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6878.99 rows=300075 width=0) (actual time=62.446..62.446 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56101.53..400298.35 rows=7233746 width=16) (actual time=27.351..4133.002 rows=7227967 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252870.51..1728030.46 rows=32609356 width=12) (actual time=118.305..24067.509 rows=32640999 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6954.01..45982.95 rows=300075 width=4) (actual time=70.882..867.049 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=4) (actual time=0.024..3666.476 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=404477.52..404477.52 rows=15044952 width=4) (actual time=7571.275..7571.275 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=595447.77..638975.17 rows=58930 width=20) (actual time=8297.517..8484.592 rows=63442 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6547.26 rows=381364 width=0) (actual time=72.874..72.874 rows=381596 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6642.60..51931.40 rows=381364 width=4) (actual time=80.614..549.990 rows=381596 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.289..45.029 rows=3924 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=46.458..46.458 rows=3924 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.276..44.159 rows=3924 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6153.762..6274.199 rows=1586486 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.306..132.146 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7853 width=30) (actual time=0.253..1127.714 rows=7861 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=142.660..5128.637 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=142.531..142.531 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.254..25.576 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.286..27.843 rows=3991 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=8.787..8.787 rows=21730 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.266..27.235 rows=3991 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.05..34890.33 rows=22021 width=4) (actual time=12.368..296.484 rows=21730 loops=1)
Q19,1.0,->  Nested Loop  (cost=12827.83..611954.03 rows=1116 width=8) (actual time=31.030..1383.921 rows=1142 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.67 rows=396767 width=0) (actual time=4.160..4.160 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.95 rows=8123 width=0) (actual time=3.487..3.487 rows=8078 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.95 rows=8025 width=0) (actual time=3.211..3.211 rows=7979 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.31 rows=7958 width=0) (actual time=3.380..3.380 rows=8078 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=4945)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12823.09..26552.25 rows=4771 width=30) (actual time=30.811..261.660 rows=4945 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.007..2222.840 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670261.70 rows=60165670 width=8) (actual time=0.003..8712.341 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670261.70 rows=60165670 width=8) (actual time=0.003..7944.113 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.036 rows=30 loops=1953)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.036 rows=30 loops=1953)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.20 rows=1977 width=0) (actual time=0.887..0.887 rows=1953 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.69..6558.74 rows=1977 width=4) (actual time=1.219..26.480 rows=1953 loops=1)
Q16,1.0,Sort  (cost=413675.15..413745.00 rows=27941 width=40) (actual time=10886.820..10888.646 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51043.19..51043.19 rows=298033 width=40) (actual time=1272.111..1272.111 rows=297063 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403881.46..411611.69 rows=27941 width=40) (actual time=10091.767..10827.552 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2494.52..51043.19 rows=298033 width=40) (actual time=34.725..1146.648 rows=297063 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1971090.05 rows=2271533 width=12) (actual time=0.061..17804.840 rows=2246969 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1971090.05 rows=2271533 width=12) (actual time=0.087..18253.319 rows=2246969 loops=1)
Q14,1.0,->  Hash Join  (cost=93534.57..1143755.05 rows=767275 width=29) (actual time=1300.993..27409.703 rows=774209 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8012.57..1046723.92 rows=767275 width=12) (actual time=119.636..25447.640 rows=774209 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442089.90 rows=14940031 width=8) (actual time=0.018..6971.654 rows=14838784 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..735218.36 rows=14940031 width=8) (actual time=791.447..16414.287 rows=15338802 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=20) (actual time=0.004..5475.751 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2422332.58 rows=293015 width=15) (actual time=0.118..21577.874 rows=312522 loops=1)
Q12,1.0,->  Hash Join  (cost=592539.42..3024028.71 rows=293015 width=27) (actual time=10049.903..31883.139 rows=312522 loops=1)
Q12,1.0,->  Hash  (cost=404477.52..404477.52 rows=15044952 width=20) (actual time=10004.851..10004.851 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..38.030 rows=3974 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.285..27.115 rows=3974 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=28.070..2374.480 rows=317920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=39.015..4059.174 rows=317920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=38.961..38.961 rows=3974 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.990..27.990 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.258..26.487 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.285..37.399 rows=3974 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1820675.88 rows=59532029 width=20) (actual time=0.013..20293.505 rows=59382429 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820675.88 rows=14837857 width=12) (actual time=0.020..17485.427 rows=14808453 loops=1)
Q10,1.0,->  Hash  (cost=268797.04..268797.04 rows=583328 width=8) (actual time=4891.302..4891.302 rows=575122 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6019.12..268797.04 rows=583328 width=8) (actual time=27.470..4714.886 rows=575122 loops=1)
