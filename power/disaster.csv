Q21,708328.0,->  Nested Loop Semi Join  (cost=2406.31..2844759.71 rows=1 width=34) (actual time=38.445..39642.119 rows=708328 loops=1)
Q3,314930.4,->  Sort  (cost=2529773.26..2537646.52 rows=3149304 width=20) (actual time=43230.248..43230.250 rows=10 loops=1)
Q18,303260.7,->  GroupAggregate  (cost=10151031.63..10976659.07 rows=30022816 width=39) (actual time=66319.896..66320.220 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2176946.24..2789754.01 rows=7507492 width=39) (actual time=41756.727..48240.315 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2107918.24..2608113.63 rows=7507492 width=20) (actual time=40660.794..47144.099 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2789754.01..2789754.01 rows=7507492 width=39) (actual time=48240.586..48240.586 rows=99 loops=1)
Q18,43322.9,->  Sort  (cost=10151031.63..10226088.67 rows=30022816 width=39) (actual time=66319.884..66319.926 rows=693 loops=1)
Q18,43322.9,->  Hash Join  (cost=2883597.66..5601325.54 rows=30022816 width=39) (actual time=48656.760..66318.618 rows=693 loops=1)
Q18,40623.5,->  Hash  (cost=2057646.54..2057646.54 rows=4021736 width=4) (actual time=40496.464..40496.464 rows=99 loops=1)
Q18,40623.5,->  HashAggregate  (cost=1967157.48..2017429.18 rows=4021736 width=8) (actual time=36291.367..40495.733 rows=99 loops=1)
Q21,40090.0,->  Nested Loop Anti Join  (cost=2406.88..2844761.49 rows=1 width=26) (actual time=38.894..42552.126 rows=40090 loops=1)
Q9,28673.3,->  Sort  (cost=1062192.25..1062192.54 rows=114 width=46) (actual time=89526.651..90064.701 rows=3268759 loops=1)
Q9,28673.3,->  Nested Loop  (cost=66699.60..1062184.66 rows=114 width=24) (actual time=656.617..80801.281 rows=3268759 loops=1)
Q9,28673.3,->  Nested Loop  (cost=66699.17..1062129.41 rows=114 width=24) (actual time=656.544..49443.580 rows=3268759 loops=1)
Q9,28673.3,->  Nested Loop  (cost=66698.88..1062092.63 rows=114 width=28) (actual time=656.532..39082.368 rows=3268759 loops=1)
Q9,28673.3,->  Hash Join  (cost=66701.17..1062188.36 rows=114 width=46) (actual time=656.680..83986.833 rows=3268759 loops=1)
Q10,27352.2,->  Sort  (cost=2271006.40..2272374.01 rows=547045 width=175) (actual time=34299.651..34299.654 rows=20 loops=1)
Q2,4733.0,->  Merge Join  (cost=465687.75..890680.23 rows=1 width=190) (actual time=5916.081..7777.960 rows=4733 loops=1)
Q21,4004.0,->  HashAggregate  (cost=2844761.49..2844761.50 rows=1 width=26) (actual time=42612.537..42613.598 rows=4004 loops=1)
Q15,3739.0,->  Subquery Scan on revenue0  (cost=1720956.51..1721040.64 rows=3739 width=12) (actual time=53799.986..53800.127 rows=1 loops=1)
Q15,3739.0,->  Sort  (cost=1721262.52..1721271.87 rows=3739 width=12) (actual time=53800.158..53800.159 rows=1 loops=1)
Q15,3739.0,Merge Join  (cost=3425458.53..3430555.82 rows=3739 width=79) (actual time=53817.306..53817.308 rows=1 loops=1)
Q15,3739.0,->  HashAggregate  (cost=1720956.51..1721003.25 rows=3739 width=12) (actual time=53799.984..53800.124 rows=1 loops=1)
Q7,762.7,Sort  (cost=2126710.72..2126718.34 rows=3051 width=64) (actual time=23349.206..23349.207 rows=4 loops=1)
Q7,762.7,->  HashAggregate  (cost=2126488.37..2126534.14 rows=3051 width=64) (actual time=23349.143..23349.147 rows=4 loops=1)
Q8,364.0,Sort  (cost=1771409.29..1771411.11 rows=728 width=38) (actual time=11164.747..11164.748 rows=2 loops=1)
Q8,364.0,->  HashAggregate  (cost=1771361.94..1771374.68 rows=728 width=38) (actual time=11164.707..11164.707 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2844761.51..2844761.52 rows=1 width=26) (actual time=42614.751..42614.757 rows=100 loops=1)
Q21,100.0,Limit  (cost=2844761.51..2844761.52 rows=1 width=26) (actual time=42614.752..42614.770 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=890680.24..890680.24 rows=1 width=190) (actual time=7782.772..7782.785 rows=100 loops=1)
Q2,100.0,Limit  (cost=890680.24..890680.24 rows=1 width=190) (actual time=7782.774..7782.798 rows=100 loops=1)
Q11,33.1,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7044.973..7045.963 rows=9650 loops=1)
Q11,33.1,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6969.430..7039.016 rows=9650 loops=1)
Q3,27.8,->  HashAggregate  (cost=2430224.89..2461717.93 rows=3149304 width=20) (actual time=43172.797..43209.080 rows=113215 loops=1)
Q15,26.7,->  HashAggregate  (cost=1704111.58..1704148.97 rows=3739 width=12) (actual time=24949.951..24975.112 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=735010)
Q14,14.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7403.17 rows=725517 width=0) (actual time=117.901..117.901 rows=10664960 loops=1)
Q3,10.5,->  Hash Join  (cost=761702.52..2382985.33 rows=3149304 width=20) (actual time=7563.170..42862.783 rows=298953 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2402.31 rows=318707 width=0) (actual time=34.529..34.529 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.076 rows=8 loops=435788)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.618..3.618 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.656..3.656 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1205491)
Q5,5.0,Sort  (cost=1998113.59..1998113.66 rows=25 width=34) (actual time=16114.219..16114.220 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1998112.76..1998113.01 rows=25 width=34) (actual time=16114.171..16114.174 rows=5 loops=1)
Q4,5.0,Sort  (cost=1478498.61..1478498.62 rows=1 width=16) (actual time=14877.140..14877.140 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=573137)
Q4,5.0,->  HashAggregate  (cost=1478498.59..1478498.60 rows=1 width=16) (actual time=14877.084..14877.085 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=708328)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5586.82 rows=554682 width=0) (actual time=27.463..27.463 rows=2535680 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..5786.71 rows=574671 width=0) (actual time=27.954..27.954 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=844752.80..844753.30 rows=200 width=8) (actual time=25892.892..25892.895 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=844743.16..844745.16 rows=200 width=8) (actual time=25892.814..25892.822 rows=46 loops=1)
Q17,3.9,->  Nested Loop  (cost=83.01..115761.43 rows=20325 width=4) (actual time=1.607..180.627 rows=5178 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=453847)
Q4,3.4,->  Nested Loop Semi Join  (cost=5930.94..1477728.97 rows=153925 width=16) (actual time=28.130..14554.627 rows=525628 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.011..0.024 rows=3 loops=1995)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241678.82 rows=32204109 width=0) (actual time=118.323..118.323 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.277..0.346 rows=3 loops=21685)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..54913.62 rows=7316483 width=0) (actual time=27.641..27.641 rows=2535680 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..13.485 rows=35992 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..204971.06 rows=27309741 width=0) (actual time=119.235..119.235 rows=10664960 loops=1)
Q15,2.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..204971.06 rows=27309741 width=0) (actual time=118.285..118.285 rows=10664960 loops=1)
Q22,2.3,Sort  (cost=691191.34..691191.35 rows=3 width=20) (actual time=8498.747..8498.748 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638266.19..638266.23 rows=3 width=20) (actual time=8498.695..8498.697 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=753.98..10615058.08 rows=26859 width=4) (actual time=12.735..8111.517 rows=58755 loops=1)
Q20,2.1,->  Hash  (cost=10615058.08..10615058.08 rows=26859 width=4) (actual time=8148.383..8148.383 rows=58755 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.032..0.048 rows=2 loops=6406)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1993.47 rows=198147 width=0) (actual time=4.169..4.169 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403237.68..404715.98 rows=591320 width=40) (actual time=10124.614..10265.469 rows=1184019 loops=1)
Q16,2.0,->  Hash Join  (cost=54677.87..346549.07 rows=591320 width=40) (actual time=1456.158..6870.571 rows=1184019 loops=1)
Q12,2.0,Sort  (cost=3022822.93..3022822.93 rows=1 width=27) (actual time=35542.717..35542.717 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3022822.91..3022822.92 rows=1 width=27) (actual time=35542.665..35542.665 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=343530.81..2237303.15 rows=547045 width=175) (actual time=11216.647..32217.630 rows=1110626 loops=1)
Q10,2.0,->  Hash Join  (cost=343529.25..2229779.72 rows=547045 width=153) (actual time=11216.619..31835.268 rows=1110626 loops=1)
Q10,2.0,->  Hash Join  (cost=274501.25..2152546.05 rows=547045 width=12) (actual time=9597.379..29510.423 rows=1110626 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902511.84 rows=800608 width=34) (actual time=38.308..26567.214 rows=1521210 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.494..3824.994 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817043.40 rows=20015211 width=8) (actual time=0.005..20582.540 rows=37967116 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323953.65 rows=389806 width=38) (actual time=38.427..34418.823 rows=735010 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.027..0.452 rows=56 loops=1)
Q20,1.6,Sort  (cost=10617828.33..10617831.02 rows=1074 width=51) (actual time=8181.178..8181.318 rows=1764 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10615436.82..10617774.26 rows=1074 width=51) (actual time=8148.858..8179.582 rows=1764 loops=1)
Q9,1.5,GroupAggregate  (cost=1062192.25..1062196.24 rows=114 width=46) (actual time=89536.756..92241.716 rows=175 loops=1)
Q1,1.5,Sort  (cost=4198868.14..4198868.16 rows=6 width=20) (actual time=90088.182..90088.183 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4198867.96..4198868.06 rows=6 width=20) (actual time=90088.125..90088.127 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5971.33 rows=595933 width=0) (actual time=4.139..4.139 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2250979.28..2256449.73 rows=547045 width=175) (actual time=33977.592..34163.958 rows=372215 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.45 rows=140247 width=0) (actual time=440.900..440.900 rows=190640 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.52..41872.00 rows=140247 width=24) (actual time=449.027..561.712 rows=190640 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94105 width=4) (actual time=0.014..623.668 rows=108947 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.31..351420.51 rows=376420 width=16) (actual time=656.357..4796.524 rows=435788 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94105 width=4) (actual time=655.908..655.908 rows=108947 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91698.69 rows=9155069 width=0) (actual time=119.677..119.677 rows=10664960 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.669..2042.955 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.86..1723306.96 rows=124606 width=20) (actual time=7.309..8692.062 rows=122261 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.42..1521429.37 rows=412303 width=16) (actual time=7.154..3969.025 rows=402004 loops=1)
Q8,1.0,->  Nested Loop  (cost=38758.30..1770394.69 rows=24921 width=16) (actual time=2145.454..11084.380 rows=24583 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.39 rows=31 width=20) (actual time=0.027..0.265 rows=30 loops=13411)
Q8,1.0,->  Hash Join  (cost=38759.86..1770863.52 rows=24921 width=38) (actual time=2145.508..11122.422 rows=24583 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.01..1762353.59 rows=24921 width=16) (actual time=2145.393..10901.487 rows=24583 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2134.638..2134.638 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..423.43 rows=13733 width=0) (actual time=4.858..4.858 rows=13411 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=426.86..28607.47 rows=13733 width=4) (actual time=7.108..283.752 rows=13411 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.650..399.470 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.005..3397.624 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2113782.16 rows=1451043 width=42) (actual time=589.369..22674.138 rows=1460680 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2125582.57 rows=60387 width=64) (actual time=626.708..23257.558 rows=57397 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=589.233..8722.975 rows=1205491 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.035..550.532 rows=120145 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..34.805 rows=7907 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=588.737..588.737 rows=120145 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=36.847..36.847 rows=7907 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91897.81..1364359.86 rows=796468 width=8) (actual time=120.451..30024.995 rows=796471 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..478746.76 rows=2281193 width=8) (actual time=0.018..4288.887 rows=2278894 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.818..2369.808 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1978290.30 rows=1824520 width=46) (actual time=2484.855..15251.239 rows=1817050 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..1997382.98 rows=72978 width=34) (actual time=2556.268..16029.893 rows=72109 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..530205.26 rows=456239 width=38) (actual time=2484.818..7695.925 rows=453847 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2482.741..2482.741 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.711..463.760 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5930.38..268072.44 rows=574671 width=20) (actual time=28.115..4662.697 rows=573137 loops=1)
Q3,1.0,->  Hash Join  (cost=106520.06..493618.36 rows=1468345 width=12) (actual time=389.406..6962.572 rows=1460643 loops=1)
Q3,1.0,->  Hash  (cost=493618.36..493618.36 rows=1468345 width=12) (actual time=7437.243..7437.243 rows=1460643 loops=1)
Q3,1.0,->  Hash  (cost=46014.39..46014.39 rows=301035 width=4) (actual time=359.621..359.621 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6898.19 rows=301035 width=0) (actual time=64.444..64.444 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56742.74..401720.78 rows=7316483 width=16) (actual time=27.815..4423.486 rows=7322045 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249729.84..1718754.20 rows=32204109 width=12) (actual time=119.076..29849.052 rows=32265803 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.45..46014.39 rows=301035 width=4) (actual time=72.293..288.341 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.012..3820.792 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=7767.434..7767.434 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594271.66..637822.93 rows=59101 width=20) (actual time=8264.139..8477.553 rows=63549 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6555.50 rows=382468 width=0) (actual time=71.734..71.734 rows=382154 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6651.12..51968.90 rows=382468 width=4) (actual time=79.499..317.018 rows=382154 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.286..37.157 rows=4004 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=38.213..38.213 rows=4004 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.271..36.446 rows=4004 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5915.592..6036.168 rows=1602861 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.349..181.377 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8048 width=30) (actual time=0.157..1110.058 rows=8003 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=193.613..4883.174 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=193.464..193.464 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.264..35.309 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.288..29.961 rows=3995 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.54 rows=19999 width=0) (actual time=8.551..8.551 rows=21685 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.272..29.332 rows=3995 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=753.55..34889.83 rows=20019 width=4) (actual time=12.125..575.534 rows=21685 loops=1)
Q19,1.0,->  Nested Loop  (cost=12825.97..609828.92 rows=1113 width=8) (actual time=32.108..1645.152 rows=1110 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..3979.67 rows=396767 width=0) (actual time=4.130..4.130 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.23 rows=8050 width=0) (actual time=3.324..3.324 rows=8011 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.23 rows=7951 width=0) (actual time=3.519..3.519 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.91 rows=7920 width=0) (actual time=3.504..3.504 rows=8039 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.027..0.027 rows=30 loops=4816)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12821.23..26512.16 rows=4754 width=30) (actual time=31.057..288.681 rows=4816 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..3640.132 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666929.32 rows=60045632 width=8) (actual time=0.019..8007.723 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666929.32 rows=60045632 width=8) (actual time=0.005..7815.685 rows=60045669 loops=1)
Q18,1.0,Limit  (cost=10151031.63..10151034.38 rows=100 width=39) (actual time=66319.899..66320.232 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=1995)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=1995)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.74 rows=2031 width=0) (actual time=0.895..0.895 rows=1995 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.25..6716.69 rows=2031 width=4) (actual time=1.221..48.023 rows=1995 loops=1)
Q16,1.0,Sort  (cost=412951.84..413021.13 rows=27719 width=40) (actual time=10919.275..10921.140 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50965.90..50965.90 rows=295660 width=40) (actual time=1453.711..1453.711 rows=296177 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403237.68..410906.37 rows=27719 width=40) (actual time=10124.671..10859.197 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2476.22..50965.90 rows=295660 width=40) (actual time=34.610..1324.839 rows=296177 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=205532.55..1681651.67 rows=2245991 width=12) (actual time=119.044..22819.655 rows=2245276 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=205532.55..1681651.67 rows=2245991 width=12) (actual time=120.004..26571.448 rows=2245276 loops=1)
Q14,1.0,->  Hash Join  (cost=93106.55..1123208.34 rows=725517 width=29) (actual time=1543.875..39998.085 rows=747444 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7584.55..1026803.58 rows=725517 width=12) (actual time=118.787..37590.609 rows=747444 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14850293 width=8) (actual time=0.021..7222.240 rows=14852960 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732991.70 rows=14850293 width=8) (actual time=815.533..16812.672 rows=15352983 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.007..4890.395 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417499.72 rows=286442 width=15) (actual time=0.286..24588.383 rows=311740 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017810.17 rows=286442 width=27) (actual time=10213.650..35234.868 rows=311740 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=10168.637..10168.637 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.302..45.418 rows=3987 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.302..23.811 rows=3987 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.700..2590.457 rows=318960 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=46.680..4055.523 rows=318960 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=46.643..46.643 rows=3987 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.642..24.642 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..23.175 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.285..44.485 rows=3987 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.40 rows=59545614 width=20) (actual time=0.029..19131.886 rows=59561538 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817043.40 rows=14808253 width=12) (actual time=0.010..16861.024 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=267567.72..267567.72 rows=554682 width=8) (actual time=9593.856..9593.856 rows=554821 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5725.49..267567.72 rows=554682 width=8) (actual time=27.713..9320.524 rows=554821 loops=1)
